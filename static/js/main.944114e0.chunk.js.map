{"version":3,"sources":["component/ExpensesFilter.js","component/ExpenseDate.js","component/ExpenseItem.js","component/ExpensesList.js","component/chart/ChartBar.js","component/chart/Chart.js","component/ExpensesChart.js","component/Expenses.js","component/ExpenseForm.js","component/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","event","onChangefilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","item","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","exp","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.944114e0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropDownChangeHandler=(event)=>{\r\n    props.onChangefilter(event.target.value);\r\n}\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select  value={props.selected} onChange={dropDownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\nimport React from 'react';\r\n\r\nfunction ExpenseDate(props)   {\r\n     const month = props.date.toLocaleString('en-US',{month:'long'});\r\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n    <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n\r\n    );\r\n\r\n    }\r\n\r\nexport default ExpenseDate;","import './ExpenseItem.css';\r\nimport React from 'react';\r\nimport ExpenseDate from './ExpenseDate';\r\n// import Card from './Card';\r\n\r\n\r\nconst ExpenseItem = (props) => {\r\n    \r\n\r\n    return (\r\n        <li>\r\n            <div className=\"expense-item\">\r\n                <ExpenseDate date={props.date}></ExpenseDate>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                </div>\r\n                <div className=\"expense-item__price\">${props.amount}</div>\r\n                \r\n\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport './ExpensesList.css'\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\n    if (props.items.length === 0) {\r\n      return <h2 className='expenses-list__fallback'> no expenses found.</h2>;\r\n    }\r\n  \r\n    return (\r\n      <ul className='expenses-list'>\r\n        {props.items.map((value) => (\r\n          <ExpenseItem\r\n            key={value.id}\r\n            title={value.title}\r\n            amount={value.amount}\r\n            date={value.date}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n  \r\n  export default ExpensesList;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n  \r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n\r\n\r\n","import React from 'react';\r\nimport Chart from './chart/Chart';\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints = [\r\n      { label: 'Jan', value: 0 },\r\n      { label: 'Feb', value: 0 },\r\n      { label: 'Mar', value: 0 },\r\n      { label: 'Apr', value: 0 },\r\n      { label: 'May', value: 0 },\r\n      { label: 'Jun', value: 0 },\r\n      { label: 'Jul', value: 0 },\r\n      { label: 'Aug', value: 0 },\r\n      { label: 'Sep', value: 0 },\r\n      { label: 'Oct', value: 0 },\r\n      { label: 'Nov', value: 0 },\r\n      { label: 'Dec', value: 0 },\r\n    ];\r\n  \r\n    for (const expense of props.expenses) {\r\n      const expenseMonth = expense.date.getMonth();\r\n      chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n  \r\n    return <Chart dataPoints={chartDataPoints} />;\r\n  };\r\n  \r\n  export default ExpensesChart;","\r\nimport './Expenses.css'\r\nimport React, { useState } from 'react';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\n// import Card from './Card'\r\n\r\n\r\nfunction Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear)\r\n\r\n    }\r\n    const filteredExpenses = props.item.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n    \r\n    return (\r\n\r\n        <div className=\"expenses\">\r\n            <ExpensesFilter selected={filteredYear} onChangefilter={filterChangeHandler} />\r\n            <ExpensesChart expenses={filteredExpenses}/>\r\n            <ExpensesList items={filteredExpenses}/>\r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Expenses;\r\n\r\n","import React,{useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const[enteredTitle,setEnteredTitle]= useState(\"\");\r\n    const[enteredAmount,setEnteredAmount]= useState(\"\");\r\n    const[enteredDate,setEnteredDate]= useState(\"\");\r\n\r\n    const titleChangeHandler=(event)=>{\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n    const amountChangeHandler=(event)=>{\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n    const dateChangeHandler=(event)=>{\r\n        setEnteredDate(event.target.value);\r\n    };\r\n     const submitHandler=(event)=>{\r\n         event.preventDefault();\r\n\r\n         const expenseData = {\r\n            title: enteredTitle,\r\n            amount: + enteredAmount,\r\n            date: new Date(enteredDate),\r\n          };\r\n            //   console.log(expenseData)\r\n          props.onSaveExpenseData(expenseData)\r\n          setEnteredTitle(\"\");\r\n          setEnteredAmount(\"\");\r\n          setEnteredDate(\"\");\r\n     }\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler}/>\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate} onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className='new-expense__actions'>\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\nexport default ExpenseForm;","import React, {useState} from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\n\r\n\r\nconst NewExpense = (props) => {\r\n  const[isEditing,setIsEditing]=useState(false)\r\n  \r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n          ...enteredExpenseData,\r\n          id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n      setIsEditing(false\r\n        )\r\n      };\r\n    const startEditingHandler= ()=>{\r\n      setIsEditing(true);\r\n    }\r\n    const stopEditingHandler=()=>{\r\n      setIsEditing(false);\r\n    }\r\n    return(\r\n    <div className=\"new-expense\">\r\n     {!isEditing && (<button onClick={startEditingHandler}>Add NEW Expenses</button>)}\r\n       {isEditing && ( <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>)}\r\n\r\n\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default NewExpense;","import Expenses from './component/Expenses'\nimport React,{useState} from 'react';\nimport NewExpense from './component/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expense, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (exp) => {\n    setExpenses((prevExpenses) => {\n      return [exp, ...prevExpenses];\n    });\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses item={expense} />\n    </div>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}